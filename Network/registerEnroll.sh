#!/bin/bash

function createiit() {
  echo "Enrolling the iit CA admin"
  mkdir -p organizations/peerOrganizations/iit.certnetwork.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/iit.certnetwork.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-iit --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-iit.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-iit.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-iit.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-iit.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy iit's CA cert to iit's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/iit/ca-cert.pem" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/tlscacerts/ca.crt"

  # Copy iit's CA cert to iit's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/iit/ca-cert.pem" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/tlsca/tlsca.iit.certnetwork.com-cert.pem"

  # Copy iit's CA cert to iit's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/ca"
  cp "${PWD}/organizations/fabric-ca/iit/ca-cert.pem" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/ca/ca.iit.certnetwork.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-iit --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-iit --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-iit --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-iit --id.name iitadmin --id.secret iitadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-iit -M "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-iit -M "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls" --enrollment.profile tls --csr.hosts peer0.iit.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer0.iit.certnetwork.com/tls/server.key"

  echo "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-iit -M "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/msp/config.yaml"

  echo "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-iit -M "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls" --enrollment.profile tls --csr.hosts peer1.iit.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/peers/peer1.iit.certnetwork.com/tls/server.key"
  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-iit -M "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/users/User1@iit.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/users/User1@iit.certnetwork.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://iitadmin:iitadminpw@localhost:7054 --caname ca-iit -M "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/users/Admin@iit.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/iit/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/iit.certnetwork.com/users/Admin@iit.certnetwork.com/msp/config.yaml"
}

function createmhrd() {
  echo "Enrolling the mhrd CA admin"
  mkdir -p organizations/peerOrganizations/mhrd.certnetwork.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-mhrd --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-mhrd.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-mhrd.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-mhrd.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-mhrd.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy mhrd's CA cert to mhrd's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/tlscacerts/ca.crt"

  # Copy mhrd's CA cert to mhrd's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/tlsca/tlsca.mhrd.certnetwork.com-cert.pem"

  # Copy mhrd's CA cert to mhrd's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/ca"
  cp "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/ca/ca.mhrd.certnetwork.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-mhrd --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-mhrd --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-mhrd --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-mhrd --id.name mhrdadmin --id.secret mhrdadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-mhrd -M "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-mhrd -M "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls" --enrollment.profile tls --csr.hosts peer0.mhrd.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer0.mhrd.certnetwork.com/tls/server.key"

  echo "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:8054 --caname ca-mhrd -M "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/msp/config.yaml"

  echo "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:8054 --caname ca-mhrd -M "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls" --enrollment.profile tls --csr.hosts peer1.mhrd.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/peers/peer1.mhrd.certnetwork.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-mhrd -M "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/users/User1@mhrd.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/users/User1@mhrd.certnetwork.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://mhrdadmin:mhrdadminpw@localhost:8054 --caname ca-mhrd -M "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/users/Admin@mhrd.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/mhrd/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/mhrd.certnetwork.com/users/Admin@mhrd.certnetwork.com/msp/config.yaml"
}

function createnpcl() {
  echo "Enrolling the npcl CA admin"
  mkdir -p organizations/peerOrganizations/npcl.certnetwork.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-npcl --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-npcl.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-npcl.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-npcl.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-npcl.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy npcl's CA cert to npcl's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/tlscacerts/ca.crt"

  # Copy npcl's CA cert to npcl's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/tlsca/tlsca.npcl.certnetwork.com-cert.pem"

  # Copy npcl's CA cert to npcl's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/ca"
  cp "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/ca/ca.npcl.certnetwork.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-npcl --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-npcl --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-npcl --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-npcl --id.name npcladmin --id.secret npcladminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:9054 --caname ca-npcl -M "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:9054 --caname ca-npcl -M "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls" --enrollment.profile tls --csr.hosts peer0.npcl.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer0.npcl.certnetwork.com/tls/server.key"

  echo "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:9054 --caname ca-npcl -M "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/msp/config.yaml"

  echo "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:9054 --caname ca-npcl -M "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls" --enrollment.profile tls --csr.hosts peer1.npcl.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/peers/peer1.npcl.certnetwork.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:9054 --caname ca-npcl -M "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/users/User1@npcl.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/users/User1@npcl.certnetwork.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://npcladmin:npcladminpw@localhost:9054 --caname ca-npcl -M "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/users/Admin@npcl.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/npcl/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/npcl.certnetwork.com/users/Admin@npcl.certnetwork.com/msp/config.yaml"
}

function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/certnetwork.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/certnetwork.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:10054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/tlscacerts/tlsca.certnetwork.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/certnetwork.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/certnetwork.com/tlsca/tlsca.certnetwork.com-cert.pem"

  echo "Registering orderer1"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer1 --id.secret orderer1pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering orderer2"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer2 --id.secret orderer2pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering orderer3"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer3 --id.secret orderer3pw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer1 msp"
  set -x
  fabric-ca-client enroll -u https://orderer1:orderer1pw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/msp/config.yaml"

  echo "Generating the orderer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer1:orderer1pw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls" --enrollment.profile tls --csr.hosts orderer1.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer1.certnetwork.com/msp/tlscacerts/tlsca.certnetwork.com-cert.pem"

  echo "Generating the orderer2 msp"
  set -x
  fabric-ca-client enroll -u https://orderer2:orderer2pw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer2:orderer2pw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls" --enrollment.profile tls --csr.hosts orderer2.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer2.certnetwork.com/msp/tlscacerts/tlsca.certnetwork.com-cert.pem"

  echo "Generating the orderer3 msp"
  set -x
  fabric-ca-client enroll -u https://orderer3:orderer3pw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/msp/config.yaml"

  echo "Generating the orderer3-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer3:orderer3pw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls" --enrollment.profile tls --csr.hosts orderer3.certnetwork.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/certnetwork.com/orderers/orderer3.certnetwork.com/msp/tlscacerts/tlsca.certnetwork.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/certnetwork.com/users/Admin@certnetwork.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/certnetwork.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/certnetwork.com/users/Admin@certnetwork.com/msp/config.yaml"
}

createiit
createmhrd
createnpcl
createOrderer
